{
  "swagger": "2.0",
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users/{user_id}/groups/{id}": {
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "204": {
            "description": ""
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "user_id",
            "in": "path",
            "description": "User ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Group ID"
          }
        ],
        "operationId": "TdAuthWeb.GroupController.delete_user_groups",
        "description": "Create a group"
      }
    },
    "/users/{user_id}/groups": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/GroupsResponseData"
            },
            "description": "Created"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupsCreate"
            },
            "required": false,
            "name": "groups",
            "in": "body",
            "description": "Groups create attrs"
          },
          {
            "type": "integer",
            "required": true,
            "name": "user_id",
            "in": "path",
            "description": "User ID"
          }
        ],
        "operationId": "TdAuthWeb.GroupController.add_groups_to_user",
        "description": "Add groups to users"
      }
    },
    "/users/{id}/groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GroupsResponseData"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "User ID"
          }
        ],
        "operationId": "TdAuthWeb.GroupController.user_groups",
        "description": "User Groups"
      }
    },
    "/users/{id}/change_password": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "User ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/UserChangePassword"
            },
            "required": false,
            "name": "user",
            "in": "body",
            "description": "User change password attrs"
          }
        ],
        "operationId": "TdAuthWeb.UserController.change_password",
        "description": "Updates User password"
      }
    },
    "/users/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/UserResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            },
            "required": false,
            "name": "user",
            "in": "body",
            "description": "User update attrs"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "User ID"
          }
        ],
        "operationId": "TdAuthWeb.UserController.update",
        "description": "Updates User"
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/UserResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "User ID"
          }
        ],
        "operationId": "TdAuthWeb.UserController.show",
        "description": "Show User"
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "User ID"
          }
        ],
        "operationId": "TdAuthWeb.UserController.delete",
        "description": "Delete User"
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/UserResponse"
            },
            "description": "Created"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/UserCreate"
            },
            "required": false,
            "name": "user",
            "in": "body",
            "description": "User create attrs"
          }
        ],
        "operationId": "TdAuthWeb.UserController.create",
        "description": "Creates a User"
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UsersResponseData"
            },
            "description": "OK"
          }
        },
        "parameters": [],
        "operationId": "TdAuthWeb.UserController.index",
        "description": "List Users"
      }
    },
    "/sessions/refresh": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/Token"
            },
            "description": "Created"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/RefreshSessionCreate"
            },
            "required": false,
            "name": "user",
            "in": "body",
            "description": "User token"
          }
        ],
        "operationId": "TdAuthWeb.SessionController.refresh",
        "description": "Returns new token"
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/Token"
            },
            "description": "Created"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/SessionCreate"
            },
            "required": false,
            "name": "user",
            "in": "body",
            "description": "User session create attrs"
          }
        ],
        "operationId": "TdAuthWeb.SessionController.create",
        "description": "Creates a user session"
      }
    },
    "/groups/{id}": {
      "put": {
        "tags": [
          "Group"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/GroupResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupUpdate"
            },
            "required": false,
            "name": "group",
            "in": "body",
            "description": "Group update attrs"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Group ID"
          }
        ],
        "operationId": "TdAuthWeb.GroupController.update",
        "description": "Update Group"
      },
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/GroupResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Group ID"
          }
        ],
        "operationId": "TdAuthWeb.GroupController.show",
        "description": "Show group"
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "204": {
            "description": ""
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Group ID"
          }
        ],
        "operationId": "TdAuthWeb.GroupController.delete",
        "description": "Delete Group"
      }
    },
    "/groups": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "",
        "responses": {
          "400": {
            "description": "Client Error"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/GroupResponse"
            },
            "description": "Created"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupCreate"
            },
            "required": false,
            "name": "user",
            "in": "body",
            "description": "Group create attrs"
          }
        ],
        "operationId": "TdAuthWeb.GroupController.create",
        "description": "Create a group"
      },
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GroupsResponseData"
            },
            "description": "OK"
          }
        },
        "parameters": [],
        "operationId": "TdAuthWeb.GroupController.index",
        "description": "List groups"
      }
    }
  },
  "info": {
    "version": "1.0",
    "title": "TDAuth"
  },
  "host": "localhost:4001",
  "definitions": {
    "UsersResponseData": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/UsersResponse"
        }
      }
    },
    "UsersResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserResponseAttrs"
      }
    },
    "Users": {
      "type": "array",
      "title": "Users",
      "items": {
        "$ref": "#/definitions/User"
      },
      "description": "A collection of Users"
    },
    "UserUpdateProps": {
      "type": "object",
      "required": [
        "email",
        "password",
        "user_name"
      ],
      "properties": {
        "user_name": {
          "type": "string",
          "description": "user name"
        },
        "password": {
          "type": "string",
          "description": "user password"
        },
        "is_admin": {
          "type": "boolean",
          "description": "is admin flag"
        },
        "email": {
          "type": "string",
          "description": "some@email.com"
        }
      }
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/UserUpdateProps"
        }
      }
    },
    "UserResponseAttrs": {
      "type": "object",
      "required": [
        "email",
        "is_admin",
        "user_name",
        "id"
      ],
      "properties": {
        "user_name": {
          "type": "string",
          "description": "user name"
        },
        "is_admin": {
          "type": "boolean",
          "description": "flag is admin"
        },
        "id": {
          "type": "integer",
          "description": "unique identifier"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        },
        "full_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "full name"
        },
        "email": {
          "type": "string",
          "description": "email"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/UserResponseAttrs"
        }
      }
    },
    "UserCreateProps": {
      "type": "object",
      "required": [
        "email",
        "password",
        "user_name"
      ],
      "properties": {
        "user_name": {
          "type": "string",
          "description": "user name"
        },
        "password": {
          "type": "string",
          "description": "user password"
        },
        "is_admin": {
          "type": "boolean",
          "description": "is admin flag"
        },
        "email": {
          "type": "string",
          "description": "some@email.com"
        }
      }
    },
    "UserCreate": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/UserCreateProps"
        }
      }
    },
    "UserChangePassword": {
      "type": "object",
      "required": [
        "new_password",
        "old_password"
      ],
      "properties": {
        "old_password": {
          "type": "string",
          "description": "current password"
        },
        "new_password": {
          "type": "string",
          "description": "new password"
        }
      }
    },
    "User": {
      "type": "object",
      "title": "User",
      "required": [
        "email",
        "is_admin",
        "user_name",
        "id"
      ],
      "properties": {
        "user_name": {
          "type": "string",
          "description": "user name"
        },
        "password": {
          "type": "string",
          "description": "user password"
        },
        "is_admin": {
          "type": "boolean",
          "description": "flag is admin"
        },
        "id": {
          "type": "integer",
          "description": "unique identifier"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        },
        "full_name": {
          "type": "string",
          "description": "full name"
        },
        "email": {
          "type": "string",
          "description": "email"
        }
      },
      "example": {
        "user_name": "myuser",
        "password": "myuserpass",
        "is_admin": false,
        "id": 123,
        "groups": [
          {
            "name": "group1",
            "id": 321
          }
        ],
        "full_name": "My User",
        "email": "some@email.com"
      },
      "description": "User entity"
    },
    "Token": {
      "type": "object",
      "title": "Auth Token",
      "required": [
        "refresh_token"
      ],
      "properties": {
        "token": {
          "type": "string",
          "description": "token"
        },
        "refresh_token": {
          "type": "string",
          "description": "refresh token"
        }
      }
    },
    "SessionCreate": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/Session"
        }
      }
    },
    "Session": {
      "type": "object",
      "required": [
        "password",
        "user_name"
      ],
      "properties": {
        "user_name": {
          "type": "string",
          "description": "user name"
        },
        "password": {
          "type": "string",
          "description": "password"
        }
      }
    },
    "RefreshSessionCreate": {
      "type": "object",
      "required": [
        "refresh_token"
      ],
      "properties": {
        "refresh_token": {
          "type": "string",
          "description": "refresh token"
        }
      }
    },
    "GroupsResponseData": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/GroupsResponse"
        }
      }
    },
    "GroupsResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GroupResponseAttrs"
      }
    },
    "GroupsCreate": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupCreateProps"
          }
        }
      }
    },
    "Groups": {
      "type": "array",
      "title": "Groups",
      "items": {
        "$ref": "#/definitions/Group"
      },
      "description": "A collection of Groups"
    },
    "GroupUpdateProps": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "name"
        }
      }
    },
    "GroupUpdate": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/GroupUpdateProps"
        }
      }
    },
    "GroupResponseAttrs": {
      "type": "object",
      "required": [
        "name",
        "id"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "name"
        },
        "id": {
          "type": "integer",
          "description": "unique identifier"
        }
      }
    },
    "GroupResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/GroupResponseAttrs"
        }
      }
    },
    "GroupCreateProps": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "name"
        }
      }
    },
    "GroupCreate": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/GroupCreateProps"
        }
      }
    },
    "Group": {
      "type": "object",
      "title": "Group",
      "required": [
        "name",
        "id"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "name"
        },
        "id": {
          "type": "integer",
          "description": "unique identifier"
        }
      },
      "example": {
        "name": "mygroup",
        "id": 123
      },
      "description": "Group entity"
    }
  },
  "basePath": "/api"
}